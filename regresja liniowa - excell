import matplotlib.pyplot as mat
import numpy as np
from openpyxl import load_workbook

wb = load_workbook('xd.xlsx')
ws = wb.get_sheet_by_name('Arkusz1')
columnx = ws['A']
columny = ws['B']
columnxr =ws['C']
columnyr =ws['D']



x = [float(columnx[i].value) for i in range(len(columnx))]
y = [float(columny[i].value) for i in range(len(columny))]
xer = [columnxr[i].value for i in range(len(columnxr))]
yer = [columnyr[i].value for i in range(len(columnyr))]

xer = [float(xer[i]) for i in range(len(xer))]
yer = [float(yer[i]) for i in range(len(yer))]
s = 0;sx=0;sy=0;sxx=0;sxy=0
if len(x)!=len(y):
    print("error")
for i in yer:
    s+=(1/i)**2
for i in range(len(x)):
    e=yer[i]**2
    sx+=x[i]/e
    print(yer[i],yer[i]*yer[i],e,sx)
    sy+=y[i]/e
    sxx+=(x[i]**2)/e
    sxy+=x[i]*y[i]/e
print(s)
print(sx,sy,sxx,sxy)

delta =s*sxx-sx**2
print(delta)
a = (s*sxy-sx*sy)/delta
b = (sxx*sy-sx*sxy)/delta
print(a,b)
#mat.scatter(x,y)
xl=np.linspace(min(x),max(x),2)

#d_err_down = (s-2)*delta
a_err = np.sqrt(s/delta)
b_err =np.sqrt(sxx/delta)
print(a_err,b_err)


fig = mat.figure()
ax = fig.add_subplot(1, 1, 1)
# Major ticks every 20, minor ticks every 5
major_ticks = np.arange(min(x), 1.2*max(x), abs(max(x)-min(x))/10)
minor_ticks = np.arange(min(x), 1.2*max(x), abs(max(x)-min(x))/20)
major_ticksy = np.arange(min(y), max(y), abs(max(y)-min(y))/10)#
minor_ticksy = np.arange(min(y), max(y), abs(max(y)-min(y))/20)#
ax.set_xticks(major_ticks)
ax.set_xticks(minor_ticks, minor=True)
ax.set_yticks(major_ticksy)
ax.set_yticks(minor_ticksy, minor=True)

# And a corresponding grid
ax.grid(which='both')

# Or if you want different settings for the grids:
ax.grid(which='minor', alpha=0.2)
ax.grid(which='major', alpha=0.5)
mat.plot(xl, a*xl+b)
mat.scatter(x,y,s=10,c='black',label='U[L]')
mat.errorbar(x,y,yerr=yer,xerr=xer,fmt=',',ecolor='red',label='error y(x)')
mat.xlabel("x[x]")
mat.ylabel("y[y]")
mat.legend(loc="upper left")
mat.title("WYKRES y[x]")
mat.show()

